openapi: 3.1.0
x-stoplight:
  id: akuqmsmxet6zl
info:
  title: ControlPresencia
  version: '1.0'
  description: test description
servers:
  - url: 'http://localhost:3000'
paths:
  '/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: Id of an existing user.
    get:
      summary: Get User Info by User ID
      tags: []
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
        '404':
          description: User Not Found
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
      x-stoplight:
        id: tgecsbcxbtq86
    patch:
      summary: Update User Information
      operationId: patch-users-userId
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    firstName: Rebecca
                    lastName: Baker
                    email: rebecca@gmail.com
                    dateOfBirth: '1985-10-02'
                    emailVerified: false
                    createDate: '2019-08-24'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      description: Update the information of an existing user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the user''s email verified property will be set to false.'
                dateOfBirth:
                  type: string
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
        description: Patch user properties to update.
      x-stoplight:
        id: i1mhdrknyn6tr
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
      x-stoplight:
        id: txdpf3uta2vto
  /presence:
    get:
      summary: Presence findMany
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                  content:
                    type: array
                    items:
                      type: object
                      properties:
                        ControlPresenciaID:
                          type: integer
                        CustomerID:
                          type: integer
                        DocumentoID:
                          type: integer
                        EmpleadoID:
                          type: integer
                        EmpresaID:
                          type: integer
                        Fecha:
                          type: string
                        FechaHoraUsuario:
                          type: string
                        HoraFinManana:
                          type: string
                        HoraIniManana:
                          type: string
                        HoraFinTarde:
                          type: string
                        HoraIniTarde:
                          type: string
                        HorasExtra:
                          type: string
                        HorasNormales:
                          type: string
                        UsuarioID:
                          type: integer
                        TipoMotivoSalidaID:
                          type: integer
                        ControlPresencia_PadreID:
                          type: integer
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
                    content:
                      - ControlPresenciaID: 54
                        CustomerID: 29
                        DocumentoID: 0
                        EmpleadoID: 4
                        EmpresaID: 1
                        Fecha: '2023-02-09T05:00:00.000'
                        FechaHoraUsuario: '2024-07-17T18:05:57.261'
                        HoraFinManana: '0000-00-00T13:30:00.000'
                        HoraIniManana: '0000-00-00T00:00:00.000'
                        HoraFinTarde: '0000-00-00T18:00:00.000'
                        HoraIniTarde: '0000-00-00T00:00:00.000'
                        HorasExtra: '0000-00-00T00:00:00.000'
                        HorasNormales: '0000-00-00T07:30:00.000'
                        UsuarioID: 739
                        TipoMotivoSalidaID: 11647
                        ControlPresencia_PadreID: 51
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 401
                    message: 'Token invalid: Unsigned'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 401
                    message: 'Token invalid: Unsigned'
      operationId: get-presence
      x-stoplight:
        id: gbjorxicip6il
      parameters:
        - schema:
            type: string
          in: header
          name: accessToken
          required: true
          description: Token Login
        - schema:
            type: string
          in: query
          name: employees
          description: 'Filtro: Lista de empleados separado por ( , )'
        - schema:
            type: string
          in: query
          name: startDate
          description: 'Filtro: Fecha desde '
        - schema:
            type: string
          in: query
          name: endDate
          description: 'Filtro: Fecha Hasta'
  '/presence/{ControlPresenciaID}':
    parameters:
      - schema:
          type: string
        name: ControlPresenciaID
        in: path
        required: true
      - schema:
          type: string
        name: ControlPresenciaID
        in: path
        required: true
      - schema:
          type: string
        name: ControlPresenciaID
        in: path
        required: true
      - schema:
          type: string
        in: header
        name: accessToken
        description: Login Token
    get:
      summary: Presence findOne
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                  content:
                    type: object
                    properties:
                      controlPresenciaID:
                        type: integer
                      CustomerID:
                        type: integer
                      DocumentoID:
                        type: integer
                      EmpleadoID:
                        type: integer
                      EmpresaID:
                        type: integer
                      Fecha:
                        type: string
                      FechaHoraUsuario:
                        type: string
                      HoraFinManana:
                        type: string
                      HoraIniManana:
                        type: string
                      HoraFinTarde:
                        type: string
                      HoraIniTarde:
                        type: string
                      HorasExtra:
                        type: string
                      HorasNormales:
                        type: string
                      UsuarioID:
                        type: integer
                      ControlPresencia_PadreID:
                        type: integer
                      TipoMotivoSalidaID:
                        type: integer
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
                    content:
                      controlPresenciaID: 3
                      CustomerID: 29
                      DocumentoID: 1109
                      EmpleadoID: 3
                      EmpresaID: 1
                      Fecha: '2023-02-09T00:00:00.000'
                      FechaHoraUsuario: '2023-02-10T15:38:48.697'
                      HoraFinManana: '133000'
                      HoraIniManana: '030000'
                      HoraFinTarde: '180000'
                      HoraIniTarde: '000000'
                      HorasExtra: '000000'
                      HorasNormales: '073000'
                      UsuarioID: 1
                      ControlPresencia_PadreID: 0
                      TipoMotivoSalidaID: 0
          headers: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 401
                    message: 'Token invalid: Unsigned'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 404
                    message: No se encontró el registro solicitado en la BD
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 404
                    message: No se encontró el registro solicitado en la BD
      operationId: get-presence-ControlPresenciaID
      x-stoplight:
        id: abjm1w8fsjywk
      parameters:
        - schema:
            type: string
          in: header
          name: accessToken
          description: token login
          required: true
    put:
      summary: Presence update
      tags: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 401
                    message: 'Token invalid: Unsigned'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 401
                    message: 'Token invalid: Unsigned'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: put-presence-ControlPresenciaID
      x-stoplight:
        id: 5d43nv1vgw1b3
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                controlPresenciaID:
                  type: integer
                CustomerID:
                  type: integer
                DocumentoID:
                  type: integer
                EmpleadoID:
                  type: integer
                EmpresaID:
                  type: integer
                Fecha:
                  type: string
                FechaHoraUsuario:
                  type: string
                HoraFinManana:
                  type: string
                HoraIniManana:
                  type: string
                HoraFinTarde:
                  type: string
                HoraIniTarde:
                  type: string
                HorasExtra:
                  type: string
                HorasNormales:
                  type: string
                UsuarioID:
                  type: integer
                ControlPresencia_PadreID:
                  type: integer
                TipoMotivoSalidaID:
                  type: integer
              x-examples:
                Example 1:
                  controlPresenciaID: 4
                  CustomerID: 29
                  DocumentoID: 1110
                  EmpleadoID: 3
                  EmpresaID: 1
                  Fecha: '2023-02-09T00:00:00.000'
                  FechaHoraUsuario: '2023-02-10T15:42:27.291'
                  HoraFinManana: '180000'
                  HoraIniManana: '180000'
                  HoraFinTarde: '180000'
                  HoraIniTarde: '000000'
                  HorasExtra: '000000'
                  HorasNormales: '073000'
                  UsuarioID: 1
                  ControlPresencia_PadreID: 0
                  TipoMotivoSalidaID: 0
      parameters:
        - schema:
            type: string
          in: header
          name: accessToken
          description: token login
          required: true
    delete:
      summary: Presence delete
      tags: []
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 401
                    message: 'Token invalid: Unsigned'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 401
                    message: 'Token invalid: Unsigned'
      operationId: delete-presence-ControlPresenciaID
      x-stoplight:
        id: 1tu421540s9bu
      parameters:
        - schema:
            type: string
          in: header
          name: accessToken
          description: token login
          required: true
  /presence/entry:
    parameters: []
    post:
      summary: Presence Entry
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  controlPresenciaID:
                    type: integer
                  CustomerID:
                    type: integer
                  DocumentoID:
                    type: integer
                  EmpleadoID:
                    type: integer
                  EmpresaID:
                    type: integer
                  Fecha:
                    type: string
                  FechaHoraUsuario:
                    type: string
                  HoraFinManana:
                    type: string
                  HoraIniManana:
                    type: string
                  HoraFinTarde:
                    type: string
                  HoraIniTarde:
                    type: string
                  HorasExtra:
                    type: string
                  HorasNormales:
                    type: string
                  UsuarioID:
                    type: integer
                  ControlPresencia_PadreID:
                    type: integer
                  TipoMotivoSalidaID:
                    type: integer
                x-examples:
                  Example 1:
                    controlPresenciaID: 4
                    CustomerID: 29
                    DocumentoID: 1110
                    EmpleadoID: 3
                    EmpresaID: 1
                    Fecha: '2023-02-09T00:00:00.000'
                    FechaHoraUsuario: '2023-02-10T15:42:27.291'
                    HoraFinManana: '180000'
                    HoraIniManana: '180000'
                    HoraFinTarde: '180000'
                    HoraIniTarde: '000000'
                    HorasExtra: '000000'
                    HorasNormales: '073000'
                    UsuarioID: 1
                    ControlPresencia_PadreID: 0
                    TipoMotivoSalidaID: 0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 401
                    message: 'Token invalid: Unsigned'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 401
                    message: 'Token invalid: Unsigned'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 401
                    message: 'Token invalid: Unsigned'
      operationId: post-presence-entry
      x-stoplight:
        id: 0vgvr4fnef6gl
      parameters:
        - schema:
            type: string
          in: header
          name: accessToken
          description: Token Login
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  DocumentoID: 1110
                  EmpleadoID: 3
                  Fecha: '2023-02-09T00:00:00.000'
                  HoraFinManana: '180000'
                  HoraIniManana: '180000'
                  HoraFinTarde: '180000'
                  HoraIniTarde: '000000'
                  HorasExtra: '000000'
                  HorasNormales: '073000'
                  TipoMotivoSalidaID: 0
              required:
                - EmpleadoID
              properties:
                DocumentoID:
                  type: integer
                EmpleadoID:
                  type: integer
                Fecha:
                  type: string
                HoraFinManana:
                  type: string
                HoraIniManana:
                  type: string
                HoraFinTarde:
                  type: string
                HoraIniTarde:
                  type: string
                HorasExtra:
                  type: string
                HorasNormales:
                  type: string
                TipoMotivoSalidaID:
                  type: integer
  /presence/exit:
    post:
      summary: Presence Exit
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  controlPresenciaID:
                    type: integer
                  CustomerID:
                    type: integer
                  DocumentoID:
                    type: integer
                  EmpleadoID:
                    type: integer
                  EmpresaID:
                    type: integer
                  Fecha:
                    type: string
                  FechaHoraUsuario:
                    type: string
                  HoraFinManana:
                    type: string
                  HoraIniManana:
                    type: string
                  HoraFinTarde:
                    type: string
                  HoraIniTarde:
                    type: string
                  HorasExtra:
                    type: string
                  HorasNormales:
                    type: string
                  UsuarioID:
                    type: integer
                  ControlPresencia_PadreID:
                    type: integer
                  TipoMotivoSalidaID:
                    type: integer
                x-examples:
                  Example 1:
                    controlPresenciaID: 4
                    CustomerID: 29
                    DocumentoID: 1110
                    EmpleadoID: 3
                    EmpresaID: 1
                    Fecha: '2023-02-09T00:00:00.000'
                    FechaHoraUsuario: '2023-02-10T15:42:27.291'
                    HoraFinManana: '180000'
                    HoraIniManana: '180000'
                    HoraFinTarde: '180000'
                    HoraIniTarde: '000000'
                    HorasExtra: '000000'
                    HorasNormales: '073000'
                    UsuarioID: 1
                    ControlPresencia_PadreID: 0
                    TipoMotivoSalidaID: 0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 401
                    message: 'Token invalid: Unsigned'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 401
                    message: 'Token invalid: Unsigned'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 401
                    message: 'Token invalid: Unsigned'
      operationId: post-presence-exit
      x-stoplight:
        id: tlirp2fzlj19o
      parameters:
        - schema:
            type: string
          in: header
          name: accessToken
          description: Login tokin
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  DocumentoID: 1110
                  EmpleadoID: 3
                  Fecha: '2023-02-09T00:00:00.000'
                  HoraFinManana: '180000'
                  HoraIniManana: '180000'
                  HoraFinTarde: '180000'
                  HoraIniTarde: '000000'
                  HorasExtra: '000000'
                  HorasNormales: '073000'
                  TipoMotivoSalidaID: 0
              required:
                - EmpleadoID
              properties:
                DocumentoID:
                  type: integer
                EmpleadoID:
                  type: integer
                Fecha:
                  type: string
                HoraFinManana:
                  type: string
                HoraIniManana:
                  type: string
                HoraFinTarde:
                  type: string
                HoraIniTarde:
                  type: string
                HorasExtra:
                  type: string
                HorasNormales:
                  type: string
                TipoMotivoSalidaID:
                  type: integer
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
          x-stoplight:
            id: c4g0r8qjae8av
        firstName:
          type: string
          x-stoplight:
            id: jtumb6m8bmv40
        lastName:
          type: string
          x-stoplight:
            id: 7q9t794hd7pvp
        email:
          type: string
          format: email
          x-stoplight:
            id: wzmayntyqwcwu
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
          x-stoplight:
            id: 2lt64xjlohu16
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
          x-stoplight:
            id: vfi93tcy4bn7x
        createDate:
          type: string
          format: date
          description: The date that the user was created.
          x-stoplight:
            id: 7giyh9mnzdy4j
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
      x-stoplight:
        id: kxww4xfx3au1s
