openapi: 3.1.0
x-stoplight:
  id: aqaehbgmv8lql
info:
  title: API-Imputation
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  '/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: Id of an existing user.
    get:
      summary: Get User Info by User ID
      tags: []
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
        '404':
          description: User Not Found
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
      x-stoplight:
        id: 8e4ra9ikultw0
    patch:
      summary: Update User Information
      operationId: patch-users-userId
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    firstName: Rebecca
                    lastName: Baker
                    email: rebecca@gmail.com
                    dateOfBirth: '1985-10-02'
                    emailVerified: false
                    createDate: '2019-08-24'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      description: Update the information of an existing user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the user''s email verified property will be set to false.'
                dateOfBirth:
                  type: string
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
        description: Patch user properties to update.
      x-stoplight:
        id: wa1n7qjuyqlsu
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
      x-stoplight:
        id: 2ddxhkt55loiw
  /imputations/loadData:
    get:
      summary: findMany
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                  content:
                    type: object
                    properties:
                      '20240723':
                        type: array
                        items:
                          type: object
                          properties:
                            Cliente:
                              type: string
                            nombreCliente:
                              type: string
                            Concepto:
                              type: string
                            Horas:
                              type: string
                            Notas:
                              type: string
                            TiempoTrabajoID:
                              type: integer
                            tarjetaID:
                              type: integer
                            tareaID:
                              type: integer
                            motivoID:
                              type: integer
                            fechaImputacion:
                              type: string
                            contactoID:
                              type: integer
                            viaje:
                              type: integer
                            clave:
                              type: integer
                            cuentaID:
                              type: integer
                            proyectoID:
                              type: integer
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
                    content:
                      '20240723':
                        - Cliente: ''
                          nombreCliente: ''
                          Concepto: 'FIN PARADA OF: 581 INYECCION'
                          Horas: '0000'
                          Notas: ''
                          TiempoTrabajoID: 18901
                          tarjetaID: 0
                          tareaID: 4393
                          motivoID: 0
                          fechaImputacion: '20240723'
                          contactoID: 0
                          viaje: 0
                          clave: 0
                          cuentaID: 0
                          proyectoID: 801
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
      operationId: get-imputations
      x-stoplight:
        id: zy1w536am41t7
      parameters:
        - schema:
            type: string
          in: header
          name: accessToken
          description: login token
    parameters: []
  /imputations:
    post:
      summary: create
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                  content:
                    type: object
                    properties:
                      TiempoTrabajoID:
                        type: integer
                      success:
                        type: boolean
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
                    content:
                      TiempoTrabajoID: 18901
                      success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
      operationId: post-imputations
      x-stoplight:
        id: qykrw9xjm97ru
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  Cliente: ''
                  nombreCliente: ''
                  Concepto: 'FIN PARADA OF: 581 INYECCION'
                  Horas: '0000'
                  Notas: ''
                  TiempoTrabajoID: 18901
                  tarjetaID: 0
                  tareaID: 4393
                  motivoID: 0
                  fechaImputacion: '20240723'
                  contactoID: 0
                  viaje: 0
                  clave: 0
                  cuentaID: 0
                  proyectoID: 801
              required:
                - tareaID
                - motivoID
                - proyectoID
              properties:
                Cliente:
                  type: string
                nombreCliente:
                  type: string
                Concepto:
                  type: string
                Horas:
                  type: string
                Notas:
                  type: string
                TiempoTrabajoID:
                  type: integer
                tarjetaID:
                  type: integer
                tareaID:
                  type: integer
                motivoID:
                  type: integer
                fechaImputacion:
                  type: string
                contactoID:
                  type: integer
                viaje:
                  type: integer
                clave:
                  type: integer
                cuentaID:
                  type: integer
                proyectoID:
                  type: integer
      parameters:
        - schema:
            type: string
          in: header
          name: accessToken
          description: token login
  /imputations/duplicate:
    parameters: []
    post:
      summary: duplicate
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                  content:
                    type: object
                    properties:
                      TiempoTrabajoID:
                        type: integer
                      success:
                        type: boolean
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
                    content:
                      TiempoTrabajoID: 18901
                      success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                  content:
                    type: object
                    properties:
                      TiempoTrabajoID:
                        type: integer
                      success:
                        type: boolean
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
                    content:
                      TiempoTrabajoID: 18901
                      success: true
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                  content:
                    type: object
                    properties:
                      TiempoTrabajoID:
                        type: integer
                      success:
                        type: boolean
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
                    content:
                      TiempoTrabajoID: 18901
                      success: true
      operationId: post-imputations-duplicate
      x-stoplight:
        id: kv9ysnfvofbqq
      parameters:
        - schema:
            type: string
          in: header
          name: accessToken
          description: token login
        - schema:
            type: string
          in: query
          name: since
        - schema:
            type: string
          in: query
          name: until
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Cliente:
                  type: string
                nombreCliente:
                  type: string
                Concepto:
                  type: string
                Horas:
                  type: string
                Notas:
                  type: string
                TiempoTrabajoID:
                  type: integer
                tarjetaID:
                  type: integer
                tareaID:
                  type: integer
                motivoID:
                  type: integer
                fechaImputacion:
                  type: string
                contactoID:
                  type: integer
                viaje:
                  type: integer
                clave:
                  type: integer
                cuentaID:
                  type: integer
                proyectoID:
                  type: integer
              x-examples:
                Example 1:
                  Cliente: ''
                  nombreCliente: ''
                  Concepto: 'FIN PARADA OF: 581 INYECCION'
                  Horas: '0000'
                  Notas: ''
                  TiempoTrabajoID: 18901
                  tarjetaID: 0
                  tareaID: 4393
                  motivoID: 1
                  fechaImputacion: '20240723'
                  contactoID: 0
                  viaje: 0
                  clave: 0
                  cuentaID: 0
                  proyectoID: 801
  '/imputrations/{TimpoTrabajoID}':
    parameters:
      - schema:
          type: string
        name: TimpoTrabajoID
        in: path
        required: true
      - schema:
          type: string
        name: TimpoTrabajoID
        in: path
        required: true
      - schema:
          type: string
        name: TimpoTrabajoID
        in: path
        required: true
    put:
      summary: update
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                  content:
                    type: object
                    properties:
                      TiempoTrabajoID:
                        type: integer
                      success:
                        type: boolean
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
                    content:
                      TiempoTrabajoID: 18901
                      success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
      operationId: put-imputrations-TimpoTrabajoID
      x-stoplight:
        id: 0i02cll9lyk3c
      parameters:
        - schema:
            type: string
          in: header
          name: accessToken
          description: token login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Cliente:
                  type: string
                nombreCliente:
                  type: string
                Concepto:
                  type: string
                Horas:
                  type: string
                Notas:
                  type: string
                TiempoTrabajoID:
                  type: integer
                tarjetaID:
                  type: integer
                tareaID:
                  type: integer
                motivoID:
                  type: integer
                fechaImputacion:
                  type: string
                contactoID:
                  type: integer
                viaje:
                  type: integer
                clave:
                  type: integer
                cuentaID:
                  type: integer
                proyectoID:
                  type: integer
              x-examples:
                Example 1:
                  Cliente: ''
                  nombreCliente: ''
                  Concepto: 'FIN PARADA OF: 581 INYECCION v2'
                  Horas: '0000'
                  Notas: ''
                  TiempoTrabajoID: 18901
                  tarjetaID: 0
                  tareaID: 4393
                  motivoID: 1
                  fechaImputacion: '20240723'
                  contactoID: 0
                  viaje: 0
                  clave: 0
                  cuentaID: 0
                  proyectoID: 801
    delete:
      summary: delete
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                  content:
                    type: object
                    properties:
                      success:
                        type: boolean
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
                    content:
                      success: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
      operationId: delete-imputrations-TimpoTrabajoID
      x-stoplight:
        id: 297sj71bce6l8
      parameters:
        - schema:
            type: string
          in: header
          name: accessToken
          description: token login
  /imputations/material:
    post:
      summary: Imputación materiales
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                  content:
                    type: object
                    properties:
                      movimientoalmacenID:
                        type: integer
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
                    content:
                      movimientoalmacenID: 35661
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
      operationId: post-imputations-material
      x-stoplight:
        id: ldm5cu7kge7v0
      parameters:
        - schema:
            type: string
          in: header
          name: accessToken
          description: token login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  AlmacenID: '6'
                  ArticuloID: '14'
                  ArticuloXAlmacenID: ''
                  Cantidad2: ''
                  CantidadAlmacen: '5'
                  CantidadPrecio: ''
                  Concepto: ''
                  CuentaVerificacionID: ''
                  Descripcion: ''
                  Dto1: ''
                  Dto2: ''
                  Dto3: ''
                  EmpleadoVerificacionID: ''
                  ExcluirInventario: ''
                  ExistenciaUbicacionLoteID: ''
                  Factor: ''
                  FactorCantidad: ''
                  Fecha: '20240723'
                  FechaHora: ''
                  FechaHoraVerificacion: ''
                  FicheroOrigen: ''
                  GastoCompra: ''
                  GastoCompraCantidad2: ''
                  Hora: '154500'
                  IncidenciaCalidadCabeceraID: ''
                  IndiceUnico: ''
                  lote: ''
                  loteid: ''
                  MailingID: ''
                  Nombre: ''
                  NotasVerificacion: ''
                  Numero: ''
                  Precio: '123'
                  ProcesoID: '636'
                  ProcesoUtillajeID: ''
                  ReservaMaterialID: ''
                  Serie: ''
                  TipoMovimientoID: ''
                  UbicacionID: ''
                  UsuarioVerificacionID: ''
                  WebID: ''
                  Tipo: P
              required:
                - ArticuloID
                - CantidadAlmacen
                - ProcesoID
              properties:
                AlmacenID:
                  type: string
                ArticuloID:
                  type: string
                ArticuloXAlmacenID:
                  type: string
                Cantidad2:
                  type: string
                CantidadAlmacen:
                  type: string
                CantidadPrecio:
                  type: string
                Concepto:
                  type: string
                CuentaVerificacionID:
                  type: string
                Descripcion:
                  type: string
                Dto1:
                  type: string
                Dto2:
                  type: string
                Dto3:
                  type: string
                EmpleadoVerificacionID:
                  type: string
                ExcluirInventario:
                  type: string
                ExistenciaUbicacionLoteID:
                  type: string
                Factor:
                  type: string
                FactorCantidad:
                  type: string
                Fecha:
                  type: string
                FechaHora:
                  type: string
                FechaHoraVerificacion:
                  type: string
                FicheroOrigen:
                  type: string
                GastoCompra:
                  type: string
                GastoCompraCantidad2:
                  type: string
                Hora:
                  type: string
                IncidenciaCalidadCabeceraID:
                  type: string
                IndiceUnico:
                  type: string
                lote:
                  type: string
                loteid:
                  type: string
                MailingID:
                  type: string
                Nombre:
                  type: string
                NotasVerificacion:
                  type: string
                Numero:
                  type: string
                Precio:
                  type: string
                ProcesoID:
                  type: string
                ProcesoUtillajeID:
                  type: string
                ReservaMaterialID:
                  type: string
                Serie:
                  type: string
                TipoMovimientoID:
                  type: string
                UbicacionID:
                  type: string
                UsuarioVerificacionID:
                  type: string
                WebID:
                  type: string
                Tipo:
                  type: string
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
          x-stoplight:
            id: 36vn17ax25taf
        firstName:
          type: string
          x-stoplight:
            id: rutsoage42ezz
        lastName:
          type: string
          x-stoplight:
            id: 6y2g5g52igkxx
        email:
          type: string
          format: email
          x-stoplight:
            id: o9pmw63gj9xdd
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
          x-stoplight:
            id: eml8yfmu8s0ya
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
          x-stoplight:
            id: 3ha6tl12yb5xa
        createDate:
          type: string
          format: date
          description: The date that the user was created.
          x-stoplight:
            id: jx6br4eocmiy1
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
      x-stoplight:
        id: b9wgkl0kikmno
