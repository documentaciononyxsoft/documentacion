openapi: 3.1.0
x-stoplight:
  id: v4wmw5grnlwju
info:
  title: ApiEquipment
  version: '1.0'
servers:
  - url: 'http://15.236.85.216'
paths:
  /consult/equipments:
    parameters: []
    get:
      summary: Equipment - FindManyByFilters
      tags: []
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
      parameters:
        - schema:
            type: string
            example: eyAidHlwIjoiSldUIiwgImFsZyI6IkhTMjU2IiB9.eyAidXNlcklEIjoiMSIsICJjdXN0b21lcklEIjoiMjkiLCAicnV0YUZvdG8iOiIiLCAidXNlck5hbWUiOiJBRE1JTklTVFJBRE9SIiwgImFkbWluaXN0cmFkb3IiOiIxIiwgImVtcHJlc2FJRCI6IjEiLCAiYXBpS2V5IjoibWlzZWNyZXRpdG8iLCAiaWF0IjoxNjcyMzQ5MTcyLCAiZXhwIjoxNjcyMzU2MzcyIH0._R6egSIjKnI-OMeQjVs5tz7Jk4vJSIdk7Wh22SyJomg
          in: header
          name: accessToken
          description: Token de acceso. Si no se cuenta con uno no se podrá realizar la petición.
          required: true
        - schema:
            type: string
            example: '50'
          in: query
          name: limit
          required: true
        - schema:
            type: string
            example: '22'
          in: query
          name: articulos
          description: ArticuloID
        - schema:
            type: string
          in: query
          name: clientes
          description: '1'
        - schema:
            type: string
          in: query
          name: estado
          description: '1'
        - schema:
            type: string
          in: query
          name: fechaGarantiaIn
          description: '0'
        - schema:
            type: string
          in: query
          name: fechaGarantiaOut
          description: '20280406'
        - schema:
            type: string
          in: query
          name: fechaInstalacionIn
          description: '0'
        - schema:
            type: string
          in: query
          name: fechaInstalacionOut
          description: '20280406'
        - schema:
            type: string
          in: query
          name: garantia
          description: '1'
        - schema:
            type: string
          in: query
          name: nombre
          description: EX
        - schema:
            type: string
          in: query
          name: numero
          description: '344'
        - schema:
            type: string
          in: query
          name: offset
          description: '0'
        - schema:
            type: string
          in: query
          name: tipoEquipo
          description: '9999'
        - schema:
            type: string
          in: query
          name: ubicaciones
          description: '13'
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
      x-stoplight:
        id: es5hq1ebzjmrx
