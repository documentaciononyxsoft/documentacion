openapi: 3.1.0
x-stoplight:
  id: 3eqos1cgk5vz0
info:
  title: ApiCurrencies
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /currencies:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: |-
            {
                "statusCode": 200,
                "message": "Request processed successfully",
                "content": {
                    "success": true,
                    "msg": "La Moneda se ha Guardado exitosamente.",
                    "MonedaID": 10,
                    "FechaHoraUsuario": "2022-12-21T18:05:45.981",
                    "NombreUsuario": "ADMINISTRADOR"
                }
            }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: |-
            {
                "statusCode": 400,
                "message": "La Moneda ya existe."
            }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
          application/xml:
            schema:
              type: object
              x-examples:
                Example 1:
                  MonedaID: ''
                  Nombre: Solecito
                  Unidad: '2'
                  Abreviatura: S
                  VRedondeoPrecio: '2'
                  CRedodeoPrecio: '3'
                  CambioFijo: '0'
                  CambioEstandar: '15'
                  CodigoISO: SOL
                  RedondeoImporte: '10'
                  CodigoExterno: SUN
                  CodigoISONumerico: '19'
              properties:
                MonedaID:
                  type: string
                Nombre:
                  type: string
                Unidad:
                  type: string
                Abreviatura:
                  type: string
                VRedondeoPrecio:
                  type: string
                CRedodeoPrecio:
                  type: string
                CambioFijo:
                  type: string
                CambioEstandar:
                  type: string
                CodigoISO:
                  type: string
                RedondeoImporte:
                  type: string
                CodigoExterno:
                  type: string
                CodigoISONumerico:
                  type: string
              required:
                - Nombre
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
      parameters:
        - schema:
            type: string
            example: eyAidHlwIjoiSldUIiwgImFsZyI6IkhTMjU2IiB9.eyAidXNlcklEIjoiMSIsICJjdXN0b21lcklEIjoiMjkiLCAicnV0YUZvdG8iOiIiLCAidXNlck5hbWUiOiJBRE1JTklTVFJBRE9SIiwgImFkbWluaXN0cmFkb3IiOiIxIiwgImVtcHJlc2FJRCI6IjEiLCAiYXBpS2V5IjoibWlzZWNyZXRpdG8iLCAiaWF0IjoxNjcxNjYzODM4LCAiZXhwIjoxNjcxNjcxMDM4IH0.tZwZqX-wA9jJXozIGslCoklLmNRLJrIE_wfbLy9JhAo
          in: header
          name: accessToken
          description: Token de Validación.
          required: true
    parameters: []
    get:
      summary: ''
      operationId: get-currencies
      responses:
        '200':
          description: |-
            {
                "statusCode": 200,
                "message": "Request processed successfully",
                "content": {
                    "success": true,
                    "sql": "SELECT * \r\nFROM Moneda \r\nWHERE Moneda.CustomerID = 29",
                    "records": [
                        {
                            "MonedaID": 1,
                            "Nombre": "Euros",
                            "Unidad": 1,
                            "Abreviatura": "€",
                            "VRedondeoPrecio": 2,
                            "CRedondeoPrecio": 2,
                            "CambioFijo": 1,
                            "UsuarioID": 1,
                            "CambioEstandar": 1,
                            "CodigoISO": "EUR",
                            "RedondeImporte": 2,
                            "CodigoExterno": "",
                            "CodigoISONumerico": 0
                        },
                        {
                            "MonedaID": 2,
                            "Nombre": "USD Dolar",
                            "Unidad": 1,
                            "Abreviatura": "$",
                            "VRedondeoPrecio": 2,
                            "CRedondeoPrecio": 2,
                            "CambioFijo": 0,
                            "UsuarioID": 1,
                            "CambioEstandar": 0.76,
                            "CodigoISO": "USD",
                            "RedondeImporte": 2,
                            "CodigoExterno": "",
                            "CodigoISONumerico": 0
                        },
                        {
                            "MonedaID": 3,
                            "Nombre": "Peso Mexicano",
                            "Unidad": 1,
                            "Abreviatura": "MXN",
                            "VRedondeoPrecio": 2,
                            "CRedondeoPrecio": 2,
                            "CambioFijo": 1,
                            "UsuarioID": 2,
                            "CambioEstandar": 1,
                            "CodigoISO": "MXN",
                            "RedondeImporte": 2,
                            "CodigoExterno": "",
                            "CodigoISONumerico": 0
                        },
                        {
                            "MonedaID": 9,
                            "Nombre": "Solecito",
                            "Unidad": 2,
                            "Abreviatura": "S",
                            "VRedondeoPrecio": 2,
                            "CRedondeoPrecio": 0,
                            "CambioFijo": 0,
                            "UsuarioID": 1,
                            "CambioEstandar": 15,
                            "CodigoISO": "SOL",
                            "RedondeImporte": 10,
                            "CodigoExterno": "SUN",
                            "CodigoISONumerico": 19
                        }
                    ]
                }
            }
      parameters:
        - schema:
            type: string
            example: eyAidHlwIjoiSldUIiwgImFsZyI6IkhTMjU2IiB9.eyAidXNlcklEIjoiMSIsICJjdXN0b21lcklEIjoiMjkiLCAicnV0YUZvdG8iOiIiLCAidXNlck5hbWUiOiJBRE1JTklTVFJBRE9SIiwgImFkbWluaXN0cmFkb3IiOiIxIiwgImVtcHJlc2FJRCI6IjEiLCAiYXBpS2V5IjoibWlzZWNyZXRpdG8iLCAiaWF0IjoxNjcxNjYzODM4LCAiZXhwIjoxNjcxNjcxMDM4IH0.tZwZqX-wA9jJXozIGslCoklLmNRLJrIE_wfbLy9JhAo
          in: header
          name: accessToken
          description: Token de Validación.
          required: true
  '/currencies/{monedaID}':
    parameters:
      - schema:
          type: string
        name: monedaID
        in: path
        required: true
    put:
      summary: ''
      operationId: put-currencies-monedaID
      responses:
        '200':
          description: |-
            {
                "statusCode": 200,
                "message": "Request processed successfully",
                "content": {
                    "success": true,
                    "msg": "La Moneda se ha modificado exitosamente."
                }
            }
        '400':
          description: |-
            {
                "statusCode": 400,
                "message": "La Moneda ya existe."
            }
      parameters:
        - schema:
            type: string
            example: eyAidHlwIjoiSldUIiwgImFsZyI6IkhTMjU2IiB9.eyAidXNlcklEIjoiMSIsICJjdXN0b21lcklEIjoiMjkiLCAicnV0YUZvdG8iOiIiLCAidXNlck5hbWUiOiJBRE1JTklTVFJBRE9SIiwgImFkbWluaXN0cmFkb3IiOiIxIiwgImVtcHJlc2FJRCI6IjEiLCAiYXBpS2V5IjoibWlzZWNyZXRpdG8iLCAiaWF0IjoxNjcxNjYzODM4LCAiZXhwIjoxNjcxNjcxMDM4IH0.tZwZqX-wA9jJXozIGslCoklLmNRLJrIE_wfbLy9JhAo
          in: header
          name: accessToken
          description: Token de Validación.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  MonedaID: ''
                  Nombre: Yeur
                  Unidad: '2'
                  Abreviatura: yeis
                  VRedondeoPrecio: '11'
                  CRedodeoPrecio: '11'
                  CambioFijo: '1'
                  CambioEstandar: '11'
                  CodigoISO: 'Y'
                  RedondeoImporte: '11'
                  CodigoExterno: YEI
                  CodigoISONumerico: '11'
              properties:
                MonedaID:
                  type: number
                Nombre:
                  type: string
                Unidad:
                  type: string
                Abreviatura:
                  type: string
                VRedondeoPrecio:
                  type: number
                CRedodeoPrecio:
                  type: number
                CambioFijo:
                  type: number
                CambioEstandar:
                  type: number
                CodigoISO:
                  type: string
                RedondeoImporte:
                  type: number
                CodigoExterno:
                  type: string
                CodigoISONumerico:
                  type: number
              required:
                - MonedaID
                - Nombre
    delete:
      summary: ''
      operationId: delete-currencies-monedaID
      responses:
        '200':
          description: |-
            {
                "statusCode": 200,
                "message": "Request processed successfully",
                "content": {
                    "success": true,
                    "msg": "La Moneda ha sido Eliminada exitosamente."
                }
            }
      parameters:
        - schema:
            type: string
            example: eyAidHlwIjoiSldUIiwgImFsZyI6IkhTMjU2IiB9.eyAidXNlcklEIjoiMSIsICJjdXN0b21lcklEIjoiMjkiLCAicnV0YUZvdG8iOiIiLCAidXNlck5hbWUiOiJBRE1JTklTVFJBRE9SIiwgImFkbWluaXN0cmFkb3IiOiIxIiwgImVtcHJlc2FJRCI6IjEiLCAiYXBpS2V5IjoibWlzZWNyZXRpdG8iLCAiaWF0IjoxNjcxNjYzODM4LCAiZXhwIjoxNjcxNjcxMDM4IH0.tZwZqX-wA9jJXozIGslCoklLmNRLJrIE_wfbLy9JhAo
          in: header
          name: accessToken
          description: Token de Validación.
          required: true
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
