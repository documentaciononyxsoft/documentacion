openapi: 3.1.0
x-stoplight:
  id: ao55w1ipt665j
info:
  title: ApiVehicles
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /consult/vehicles:
    get:
      summary: Vehicle - findManyByFilters
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                  content:
                    type: object
                    properties:
                      records:
                        type: array
                        items:
                          type: object
                          properties:
                            NombreVersion:
                              type: string
                            NombreModelo:
                              type: string
                            NombreTipoVehiculo:
                              type: string
                            NombreCombustible:
                              type: string
                            Codigo:
                              type: string
                      success:
                        type: boolean
                      sql:
                        type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
                    content:
                      records:
                        - NombreVersion: '1.6'
                          NombreModelo: Clio
                          NombreTipoVehiculo: ''
                          NombreCombustible: ''
                          Codigo: '1'
                        - NombreVersion: ''
                          NombreModelo: ''
                          NombreTipoVehiculo: ''
                          NombreCombustible: ''
                          Codigo: '231231'
                      success: true
                      sql: "SELECT Vehiculo.*,\r\nVersion.Nombre AS NombreVersion,\r\nModelo.Nombre AS NombreModelo,\r\nMarca.Nombre AS NombreMarca,\r\nTipoVehiculo.Descripcion AS NombreTipoVehiculo,\r\nCombustible.Descripcion AS NombreCombustible \r\nFROM Vehiculo\r\nLEFT OUTER JOIN Version ON Version.VersionID = Vehiculo.VersionID\r\nLEFT OUTER JOIN Modelo ON Modelo.ModeloID = Version.ModeloID\r\nLEFT OUTER JOIN Marca ON Marca.MarcaID = Modelo.MarcaID\r\nLEFT OUTER JOIN TablaGeneral AS TipoVehiculo ON TipoVehiculo.TablaGeneralID = Vehiculo.TipoVehiculoID\r\nLEFT OUTER JOIN TablaGeneral AS Combustible ON Combustible.TablaGeneralID = Vehiculo.CombustibleID\r\nWHERE Vehiculo.CustomerID = 29\r\nAND Vehiculo.EmpresaID = 1\r\n\r\nlimit 50 \r\noffset 0"
              examples:
                Example 1:
                  value:
                    statusCode: 200
                    message: Request processed successfully
                    content:
                      records:
                        - NombreVersion: '1.6'
                          NombreModelo: Clio
                          NombreTipoVehiculo: ''
                          NombreCombustible: ''
                          Codigo: '1'
                        - NombreVersion: ''
                          NombreModelo: ''
                          NombreTipoVehiculo: ''
                          NombreCombustible: ''
                          Codigo: '231231'
                      success: true
                      sql: "SELECT Vehiculo.*,\r\nVersion.Nombre AS NombreVersion,\r\nModelo.Nombre AS NombreModelo,\r\nMarca.Nombre AS NombreMarca,\r\nTipoVehiculo.Descripcion AS NombreTipoVehiculo,\r\nCombustible.Descripcion AS NombreCombustible \r\nFROM Vehiculo\r\nLEFT OUTER JOIN Version ON Version.VersionID = Vehiculo.VersionID\r\nLEFT OUTER JOIN Modelo ON Modelo.ModeloID = Version.ModeloID\r\nLEFT OUTER JOIN Marca ON Marca.MarcaID = Modelo.MarcaID\r\nLEFT OUTER JOIN TablaGeneral AS TipoVehiculo ON TipoVehiculo.TablaGeneralID = Vehiculo.TipoVehiculoID\r\nLEFT OUTER JOIN TablaGeneral AS Combustible ON Combustible.TablaGeneralID = Vehiculo.CombustibleID\r\nWHERE Vehiculo.CustomerID = 29\r\nAND Vehiculo.EmpresaID = 1\r\n\r\nlimit 50 \r\noffset 0"
      operationId: get-consult-vehicles
      parameters:
        - schema:
            type: string
          in: header
          name: 'accessToken '
          description: '"tokenReciente"'
        - schema:
            type: string
          in: query
          name: offset
          description: '0'
        - schema:
            type: string
          in: query
          name: limit
          description: '50'
        - schema:
            type: string
          in: query
          name: codVehiculoDesde
        - schema:
            type: string
          in: query
          name: codVehiculoHasta
        - schema:
            type: string
          in: query
          name: matricula
        - schema:
            type: string
          in: query
          name: tipo
        - schema:
            type: string
          in: query
          name: marcaVehiculo
        - schema:
            type: string
          in: query
          name: modeloVehiculo
        - schema:
            type: string
          in: query
          name: versionVehiculo
  /brand/light:
    get:
      summary: Vehicle - findLightListBrand
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                  content:
                    type: object
                    properties:
                      success:
                        type: boolean
                      records:
                        type: array
                        items:
                          type: object
                          properties:
                            MarcaID:
                              type: integer
                            Nombre:
                              type: string
                      sql:
                        type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
                    content:
                      success: true
                      records:
                        - MarcaID: 1
                          Nombre: Renault
                        - MarcaID: 2
                          Nombre: VW
                        - MarcaID: 3
                          Nombre: Audi
                        - MarcaID: 4
                          Nombre: Mercedes
                      sql: "SELECT * \r\nFROM Marca\r\nWHERE Marca.CustomerID = 29\r\nAND Marca.EmpresaID = 1\r\n"
              examples:
                Example 1:
                  value:
                    statusCode: 200
                    message: Request processed successfully
                    content:
                      success: true
                      records:
                        - MarcaID: 1
                          Nombre: Renault
                        - MarcaID: 2
                          Nombre: VW
                        - MarcaID: 3
                          Nombre: Audi
                        - MarcaID: 4
                          Nombre: Mercedes
                      sql: "SELECT * \r\nFROM Marca\r\nWHERE Marca.CustomerID = 29\r\nAND Marca.EmpresaID = 1\r\n"
      operationId: get-brand-light
      parameters:
        - schema:
            type: string
          in: header
          name: accessToken
          description: '"tokenReciente"'
  /model/light:
    get:
      summary: Vehicle - findLightListModel
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                  content:
                    type: object
                    properties:
                      success:
                        type: boolean
                      records:
                        type: array
                        items:
                          type: object
                          properties:
                            ModeloID:
                              type: integer
                            Nombre:
                              type: string
                      sql:
                        type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
                    content:
                      success: true
                      records:
                        - ModeloID: 1
                          Nombre: Clio
                        - ModeloID: 2
                          Nombre: Kangu
                      sql: "SELECT * \r\nFROM Modelo\r\nWHERE \r\nModelo.CustomerID = 29\r\nAND Modelo.EmpresaID = 1\r\nAND Modelo.MarcaID = 1"
              examples:
                Example 1:
                  value:
                    statusCode: 200
                    message: Request processed successfully
                    content:
                      success: true
                      records:
                        - ModeloID: 1
                          Nombre: Clio
                        - ModeloID: 2
                          Nombre: Kangu
                      sql: "SELECT * \r\nFROM Modelo\r\nWHERE \r\nModelo.CustomerID = 29\r\nAND Modelo.EmpresaID = 1\r\nAND Modelo.MarcaID = 1"
      operationId: get-model-light
      parameters:
        - schema:
            type: string
          in: header
          name: 'accessToken '
          description: '"tokenReciente"'
        - schema:
            type: string
          in: query
          name: marcaID
          description: '1'
      requestBody:
        content: {}
  /version/light:
    get:
      summary: Vehicle -findLightListVersion
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                  content:
                    type: object
                    properties:
                      success:
                        type: boolean
                      records:
                        type: array
                        items:
                          type: object
                          properties:
                            VersionID:
                              type: integer
                            Nombre:
                              type: string
                      sql:
                        type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
                    content:
                      success: true
                      records:
                        - VersionID: 1
                          Nombre: '1.6'
                      sql: "SELECT * \r\nFROM Version\r\nWHERE Version.CustomerID = 29\r\nAND Version.EmpresaID  = 1\r\nAND Version.ModeloID = 1"
              examples:
                Example 1:
                  value:
                    statusCode: 200
                    message: Request processed successfully
                    content:
                      success: true
                      records:
                        - VersionID: 1
                          Nombre: '1.6'
                      sql: "SELECT * \r\nFROM Version\r\nWHERE Version.CustomerID = 29\r\nAND Version.EmpresaID  = 1\r\nAND Version.ModeloID = 1"
      operationId: get-version-light
      parameters:
        - schema:
            type: string
          in: header
          name: accessToken
          description: '"tokenReciente"'
        - schema:
            type: string
          in: query
          name: modeloID
          description: '1'
  /vehicles:
    get:
      summary: Vehicles -findMany
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                  content:
                    type: object
                    properties:
                      success:
                        type: boolean
                      records:
                        type: array
                        items:
                          type: object
                          properties:
                            VehiculoID:
                              type: integer
                            Codigo:
                              type: string
                            Matricula:
                              type: string
                            MarcaID:
                              type: integer
                            ModeloID:
                              type: integer
                            VersionID:
                              type: integer
                            TipoVehiculoID:
                              type: integer
                            CombustibleID:
                              type: integer
                            UsuarioID:
                              type: integer
                            UsuarioNombre:
                              type: string
                            FechaHoraUsuario:
                              type: string
                            Color:
                              type: string
                            Plazas:
                              type: integer
                            CV:
                              type: integer
                            Tara:
                              type: integer
                            Pmax:
                              type: integer
                            Ancho:
                              type: integer
                            Alto:
                              type: integer
                            Largo:
                              type: integer
                            FechaCompra:
                              type: string
                            PrecioCompra:
                              type: integer
                            Chasis:
                              type: string
                            Itv:
                              type: string
                      sql:
                        type: string
                x-examples:
                  Example 1:
                    statusCode: 200
                    message: Request processed successfully
                    content:
                      success: true
                      records:
                        - VehiculoID: 1
                          Codigo: '231231'
                          Matricula: '242342'
                          MarcaID: 0
                          ModeloID: 0
                          VersionID: 0
                          TipoVehiculoID: -1
                          CombustibleID: -1
                          UsuarioID: 3
                          UsuarioNombre: USUARIO
                          FechaHoraUsuario: '2019-05-31T09:36:58.000'
                          Color: '2342342'
                          Plazas: -27910
                          CV: 0
                          Tara: 0
                          Pmax: 0
                          Ancho: 0
                          Alto: 0
                          Largo: 0
                          FechaCompra: ''
                          PrecioCompra: 0
                          Chasis: ''
                          Itv: ''
                        - VehiculoID: 2
                          Codigo: '1'
                          Matricula: 3525 GSM
                          MarcaID: 0
                          ModeloID: 0
                          VersionID: 1
                          TipoVehiculoID: -1
                          CombustibleID: -1
                          UsuarioID: 3
                          UsuarioNombre: USUARIO
                          FechaHoraUsuario: '2020-01-08T09:45:58.000'
                          Color: ROJO
                          Plazas: 8
                          CV: 1222
                          Tara: 1200
                          Pmax: 5000
                          Ancho: 4500
                          Alto: 4250
                          Largo: 5210
                          FechaCompra: '20190711'
                          PrecioCompra: 25000
                          Chasis: ''
                          Itv: ''
                      sql: "SELECT vehiculo.*,\r\nChasis.Valor AS chasisValor,\r\nItv.Valor  AS itvValor,\r\nUsuario.NombreAcesso\r\nFROM vehiculo\r\nLEFT JOIN campoespecialvalor Chasis\r\nON Chasis.TablaRegistroId = vehiculo.VehiculoID AND Chasis.CampoEspecialDefinicionID =37\r\nLEFT JOIN campoespecialvalor Itv\r\nON Itv.TablaRegistroId = vehiculo.VehiculoID AND Itv.CampoEspecialDefinicionID =36 \r\nLEFT JOIN usuario\r\nON vehiculo.usuarioID = usuario.usuarioID\r\nWHERE vehiculo.CustomerID = 29\r\nAND vehiculo.EmpresaID = 1\r\n\r\norder BY vehiculo.VehiculoID ASC\r\nlimit 2\r\noffset 0"
              examples:
                Example 1:
                  value:
                    statusCode: 200
                    message: Request processed successfully
                    content:
                      success: true
                      records:
                        - VehiculoID: 1
                          Codigo: '231231'
                          Matricula: '242342'
                          MarcaID: 0
                          ModeloID: 0
                          VersionID: 0
                          TipoVehiculoID: -1
                          CombustibleID: -1
                          UsuarioID: 3
                          UsuarioNombre: USUARIO
                          FechaHoraUsuario: '2019-05-31T09:36:58.000'
                          Color: '2342342'
                          Plazas: -27910
                          CV: 0
                          Tara: 0
                          Pmax: 0
                          Ancho: 0
                          Alto: 0
                          Largo: 0
                          FechaCompra: ''
                          PrecioCompra: 0
                          Chasis: ''
                          Itv: ''
                        - VehiculoID: 2
                          Codigo: '1'
                          Matricula: 3525 GSM
                          MarcaID: 0
                          ModeloID: 0
                          VersionID: 1
                          TipoVehiculoID: -1
                          CombustibleID: -1
                          UsuarioID: 3
                          UsuarioNombre: USUARIO
                          FechaHoraUsuario: '2020-01-08T09:45:58.000'
                          Color: ROJO
                          Plazas: 8
                          CV: 1222
                          Tara: 1200
                          Pmax: 5000
                          Ancho: 4500
                          Alto: 4250
                          Largo: 5210
                          FechaCompra: '20190711'
                          PrecioCompra: 25000
                          Chasis: ''
                          Itv: ''
                      sql: "SELECT vehiculo.*,\r\nChasis.Valor AS chasisValor,\r\nItv.Valor  AS itvValor,\r\nUsuario.NombreAcesso\r\nFROM vehiculo\r\nLEFT JOIN campoespecialvalor Chasis\r\nON Chasis.TablaRegistroId = vehiculo.VehiculoID AND Chasis.CampoEspecialDefinicionID =37\r\nLEFT JOIN campoespecialvalor Itv\r\nON Itv.TablaRegistroId = vehiculo.VehiculoID AND Itv.CampoEspecialDefinicionID =36 \r\nLEFT JOIN usuario\r\nON vehiculo.usuarioID = usuario.usuarioID\r\nWHERE vehiculo.CustomerID = 29\r\nAND vehiculo.EmpresaID = 1\r\n\r\norder BY vehiculo.VehiculoID ASC\r\nlimit 50\r\noffset 0"
            application/xml:
              schema:
                type: object
                properties: {}
      operationId: get-vehicles
      parameters:
        - schema:
            type: string
          in: header
          name: accessToken
          description: '"tokenReciente"'
        - schema:
            type: string
          in: query
          name: limit
          description: '50'
        - schema:
            type: string
          in: query
          name: offset
          description: '0'
        - schema:
            type: string
          in: query
          name: order
          description: '"ASC"'
components:
  schemas: {}
